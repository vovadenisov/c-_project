#include "allclass.h"

/*
class Minion:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
    string Ip;
};
*/
Minion(read params, string IP):Ip(IP){
    name = new string(params.nameBlock);
    
}

~Minion(){
    
}

void onClick(int x, int y){
    
}

void change(map<string, state> *allState){
    
}

img Drow(){
    
}

/*
class Arrow:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};


class Power:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class Batary:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class Microphone:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class dinamic:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class Map:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class btnMap:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class btnLidar:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class btnFpv:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class Speed:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};

class Text:public Container{
public:
    Minion(read params);
    ~Minion();
    void onClick(int x, int y);
    void change(map<string, state> *allState);
    img Drow();
protected:
    void move(int newx,int newy, int angle){}
};
*/